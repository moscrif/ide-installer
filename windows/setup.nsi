# Auto-generated by EclipseNSIS Script Wizard
# 10.4.2012 11:46:06
  
Name MoscrifSdk

# General Symbol Definitions
!define REGKEY "SOFTWARE\$(^Name)"

!define PRODUCT_WEB_SITE "http://www.moscrif.com"
!define PRODUCT_PUBLISHER "Mothiva "

# MUI Symbol Definitions
!define MUI_ICON "ide_installer.ico" 
!define MUI_FINISHPAGE_NOAUTOCLOSE
!define MUI_STARTMENUPAGE_REGISTRY_ROOT HKLM
!define MUI_STARTMENUPAGE_NODISABLE
!define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}
!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup
!define MUI_STARTMENUPAGE_DEFAULTFOLDER MoscrifSDK

!define MUI_UNICON "ide_installer.ico" ;"${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall-colorful.ico"
!define MUI_UNFINISHPAGE_NOAUTOCLOSE

# Included files
!include Sections.nsh
!include MUI2.nsh

!include WordFunc.nsh
!insertmacro VersionCompare

!include "LogicLib.nsh"

; dotNet checker
!include "DotNetVer.nsh"
!include "splitString.nsh"
!include "checkGtkVersion.nsh"

; required java version
!define JRE_VERSION "1.7"
; download java url
!define JRE_URL "http://javadl.sun.com/webapps/download/AutoDL?BundleId=65110"
!include "JREDyna_Inetc.nsh"

# Variables
Var StartMenuGroup

;Var InstallDotNET

# Installer attributes
OutFile MoscrifSDK-Win.exe
InstallDir C:\MoscrifSDK ; $PROGRAMFILES\MoscrifSdk
CRCCheck on
XPStyle on
ShowInstDetails show
VIProductVersion 2012.2.0.0
VIAddVersionKey  ProductName MoscrifSDK
;VIAddVersionKey  ProductVersion "${VERSION}"
VIAddVersionKey  CompanyName "${PRODUCT_PUBLISHER}"
VIAddVersionKey  CompanyWebsite "${PRODUCT_WEB_SITE}"
VIAddVersionKey  FileVersion "${VERSION}"
VIAddVersionKey  FileDescription ""
VIAddVersionKey  LegalCopyright ""
InstallDirRegKey HKLM "${REGKEY}" Path
ShowUninstDetails show

# Installer pages
!insertmacro MUI_PAGE_WELCOME
/*!insertmacro MUI_PAGE_LICENSE licence.txt*/

!define MUI_PAGE_CUSTOMFUNCTION_LEAVE "DirectoryLeave" ; non space in path
!insertmacro MUI_PAGE_DIRECTORY

; !insertmacro CUSTOM_PAGE_JREINFO
!insertmacro MUI_PAGE_STARTMENU Application $StartMenuGroup

!insertmacro MUI_PAGE_INSTFILES
;!define MUI_FINISHPAGE_REBOOTLATER_DEFAULT
;!define MUI_FINISHPAGE_RUN "$INSTDIR\Moscrif-ide.exe"
!insertmacro MUI_PAGE_FINISH

!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

# Installer languages
!insertmacro MUI_LANGUAGE English


# Installer functions
Function .onInit
 InitPluginsDir
 
 Var /GLOBAL  tmp
 ReadRegStr $tmp HKLM "${REGKEY}" Path

 StrCmp $tmp "" done addReg
 addReg: 
     ReadRegStr $INSTDIR HKLM "${REGKEY}" Path  
 done:
FunctionEnd

# Installer sections
Section -Main SEC0000

    WriteRegStr HKLM "${REGKEY}\Components" Main 1
SectionEnd

Section -post SEC0001
   ;  Push $INSTDIR
   ;  Call AddToPath

   ; WriteRegStr HKLM "${REGKEY}" Path $INSTDIR
    
    SetOutPath $INSTDIR
     
    ;${If} ${HasDotNet3.5}    
    ${IfNot} ${HasDotNet3.5}
        DetailPrint ".Net Framework 3.5 missing." 
        ClearErrors
        
        ;webinstaller
        File "Framework\dotNetFx35setup.exe" 
        ExecWait "$INSTDIR\dotNetFx35setup.exe"  $0 
        
        ; full installer 3.5
        ;File "Framework\dotnetfx35Full.exe"   
        ;ExecWait "$INSTDIR\dotnetfx35Full.exe"  $0         
        
        ;DetailPrint "dotNetFx35setup returned $0"
        IfErrors errors
        StrCmp $0 0 done nonezeroexitcode  
   errors:
        DetailPrint "Failed to run dotNetFx35setup.exe executable!"
        MessageBox MB_OK "Failed to run dotNetFx35setup.exe executable! Installation aborted."
        DetailPrint "Installation aborted."
        Delete /REBOOTOK  "$INSTDIR\dotNetFx35setup.exe"        
        Abort
    nonezeroexitcode:
        DetailPrint "Executable dotNetFx35setup.exe returned exit code. Installation aborted." ; != 0"
        MessageBox MB_OK "Executable dotNetFx35setup.exe returned exit code. Installation aborted." ; != 0"
        DetailPrint "Installation aborted."
        Delete /REBOOTOK  "$INSTDIR\dotNetFx35setup.exe"
        Abort
    done: 
    Delete /REBOOTOK  "$INSTDIR\dotNetFx35setup.exe"  
    ;   MessageBox MB_OK|MB_ICONINFORMATION "$(^Name) requires that the .NET Framework 3.5 is installed. The .NET Framework will be downloaded and installed automatically during installation of $(^Name)."
    ;   ${OpenURL} "www.moscrif.com"  
    ${EndIf} 
   
    ${CheckGtkVersion} $1 2 12 10
    ${If} $1 = 0
        DetailPrint "Gtk# 2.12 missing."
        ClearErrors
        File "GtkSharp\gtk-sharp-2.12.10.win32.msi"
        ExecWait '"msiexec" /i "$INSTDIR\gtk-sharp-2.12.10.win32.msi"'  $0 ; /passive
        DetailPrint "gtk-sharp returned $0"  
        IfErrors errors3
        StrCmp $0 0 done3 nonezeroexitcode3  
    errors3:
        DetailPrint  "Failed to run gtk-sharp-2.12.10.win32.msi executable!"
        MessageBox MB_OK "Failed to run gtk-sharp-2.12.10.win32.msi executable! Installation aborted."
        Delete /REBOOTOK  "$INSTDIR\gtk-sharp-2.12.10.win32.msi"
        Abort
    nonezeroexitcode3:
        DetailPrint  "Executable gtk-sharp-2.12.10.win32.msi returned exit code!"; != 0"
        MessageBox MB_OK "Executable gtk-sharp-2.12.10.win32.msi returned exit code! Installation aborted."; != 0"
        Delete /REBOOTOK  "$INSTDIR\gtk-sharp-2.12.10.win32.msi" 
        Abort
    done3:
    Delete /REBOOTOK  "$INSTDIR\gtk-sharp-2.12.10.win32.msi" 
    ${EndIf}    


    call DownloadAndInstallJREIfNecessary
/*  ClearErrors  
  File "Mono\mono-2.10.8-gtksharp-2.12.11-win32-1.exe"
  ExecWait "$INSTDIR\mono-2.10.8-gtksharp-2.12.11-win32-1.exe" $0
  DetailPrint "mono-2.10.8 returned $0"  
  IfErrors errors2
    StrCmp $0 0 done2 nonezeroexitcode2  
  errors2:
    MessageBox MB_OK "Faild to run mono-2.10.8-gtksharp-2.12.11-win32-1.exe executable!"
    Abort
  nonezeroexitcode2:
    MessageBox MB_OK "Executable mono-2.10.8-gtksharp-2.12.11-win32-1.exe returned exit code != 0"
    Abort
  done2: */       
      
    WriteUninstaller $INSTDIR\uninstall.exe
    !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
    SetOutPath $SMPROGRAMS\$StartMenuGroup
    CreateShortcut "$SMPROGRAMS\$StartMenuGroup\$(^UninstallLink).lnk" $INSTDIR\uninstall.exe
    !insertmacro MUI_STARTMENU_WRITE_END
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" DisplayName "$(^Name)"
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" Publisher "${PRODUCT_PUBLISHER}"
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" URLInfoAbout "${PRODUCT_WEB_SITE}"
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" DisplayIcon $INSTDIR\uninstall.exe
    WriteRegStr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" UninstallString $INSTDIR\uninstall.exe
    WriteRegDWORD HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" NoModify 1
    WriteRegDWORD HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)" NoRepair 1
SectionEnd
 
 Section "MainFiles" SEC0002 
  SetOutPath "$INSTDIR"
  SetOverwrite try
  
  File /r ..\..\test\MoscrifSDK-Windows\* 

; Shortcuts
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  CreateShortCut "$DESKTOP\MoscrifIDE.lnk" "$INSTDIR\moscrif-ide-app.exe"
  !insertmacro MUI_STARTMENU_WRITE_END  
SectionEnd


Section -AdditionalIcons
  SetOutPath $INSTDIR
  WriteIniStr "$INSTDIR\$(^Name).url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  ;SetOutPath $SMPROGRAMS\$StartMenuGroup 
  CreateShortCut "$SMPROGRAMS\$StartMenuGroup\Website.lnk" "$INSTDIR\$(^Name).url"
  CreateShortCut "$SMPROGRAMS\$StartMenuGroup\MoscrifIDE.lnk" "$INSTDIR\moscrif-ide-app.exe"    
  !insertmacro MUI_STARTMENU_WRITE_END  

SectionEnd

Function DirectoryLeave
 
  # Call the CheckForSpaces function.
  Push $INSTDIR # Input string (install path).
  Call CheckForSpaces
  Pop $R0 # The function returns the number of spaces found in the input string.
  # Check if any spaces exist in $INSTDIR.
  StrCmp $R0 0 NoSpaces
    # Plural if more than 1 space in $INSTDIR.
    StrCmp $R0 1 0 +3
      StrCpy $R1 ""
    Goto +2
      StrCpy $R1 "s"
    # Show message box then take the user back to the Directory page.
    MessageBox MB_OK|MB_ICONEXCLAMATION "Error: The Installation directory path contains spaces. Please remove all spaces."
    Abort
  NoSpaces:
FunctionEnd

Function CheckForSpaces
 Exch $R0
 Push $R1
 Push $R2
 Push $R3
 StrCpy $R1 -1
 StrCpy $R3 $R0
 StrCpy $R0 0
 loop:
   StrCpy $R2 $R3 1 $R1
   IntOp $R1 $R1 - 1
   StrCmp $R2 "" done
   StrCmp $R2 " " 0 loop
   IntOp $R0 $R0 + 1
 Goto loop
 done:
 Pop $R3
 Pop $R2
 Pop $R1
 Exch $R0
FunctionEnd

 # Macrofor selecting uninstaller sections
!macro SELECT_UNSECTION SECTION_NAME UNSECTION_ID
    Push $R0
    ReadRegStr $R0 HKLM "${REGKEY}\Components" "${SECTION_NAME}"
    StrCmp $R0 1 0 next${UNSECTION_ID}
    !insertmacro SelectSection "${UNSECTION_ID}"
    GoTo done${UNSECTION_ID}
next${UNSECTION_ID}:
    !insertmacro UnselectSection "${UNSECTION_ID}"
done${UNSECTION_ID}:
    Pop $R0
!macroend

# Uninstaller sections
Section /o -un.Main UNSEC0000
    Delete /REBOOTOK $INSTDIR\moscrif-ide.exe
    Delete "$INSTDIR\$(^Name).url"
    Delete "$INSTDIR\uninst.exe"
  
    RmDir /r /REBOOTOK $INSTDIR
      
    Delete /REBOOTOK "$DESKTOP\MoscrifIDE.lnk"   
    
    DeleteRegValue HKLM "${REGKEY}\Components" Main
SectionEnd

Section -un.post UNSEC0001
    DeleteRegKey HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\$(^Name)"      

    ;Push $INSTDIR
   ;Call un.RemoveFromPath
    
    Delete /REBOOTOK "$SMPROGRAMS\$StartMenuGroup\$(^UninstallLink).lnk"
    Delete /REBOOTOK "$SMPROGRAMS\$StartMenuGroup\Website.lnk"
    Delete /REBOOTOK "$SMPROGRAMS\$StartMenuGroup\MoscrifIDE.lnk" 
       
    Delete /REBOOTOK $INSTDIR\uninstall.exe
    
    DeleteRegValue HKLM "${REGKEY}" StartMenuGroup
    DeleteRegValue HKLM "${REGKEY}" Path
    DeleteRegKey /IfEmpty HKLM "${REGKEY}\Components"
    DeleteRegKey /IfEmpty HKLM "${REGKEY}"

    RmDir /r /REBOOTOK $SMPROGRAMS\$StartMenuGroup
    
    RmDir /REBOOTOK $SMPROGRAMS\$StartMenuGroup
    RmDir /REBOOTOK $INSTDIR
SectionEnd

# Uninstaller functions
Function un.onInit
   ; ReadRegStr $INSTDIR HKLM "${REGKEY}" Path
    !insertmacro MUI_STARTMENU_GETFOLDER Application $StartMenuGroup
    !insertmacro SELECT_UNSECTION Main ${UNSEC0000}
FunctionEnd

# Installer Language Strings
# TODO Update the Language Strings with the appropriate translations.

LangString ^UninstallLink ${LANG_ENGLISH} "Uninstall $(^Name)"
